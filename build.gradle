plugins {
    id 'java'
    id 'jacoco'
    alias(libs.plugins.versions)
    alias(libs.plugins.version.catalog.update)
    alias(libs.plugins.jmh.gradle)
    id "org.checkerframework" version "0.6.35"
}

sourceCompatibility = JavaVersion.VERSION_11

jacocoTestReport.dependsOn(test)

repositories {
    mavenCentral()
    maven { url 'https://oss.sonatype.org/content/repositories/snapshots/' }
}

test {
    useJUnitPlatform()
    maxParallelForks = (int) (Runtime.runtime.availableProcessors() / 2)
}

dependencies {
    // JUnit bundle (includes vintage engine)
    testImplementation libs.bundles.junit

    // Mockito bundle (inline and JUnit Jupiter engine)
    testImplementation libs.bundles.mockito

    // AssertJ
    testImplementation libs.assertj

    // JMH
    jmh libs.bundles.jmh
}


checkerFramework {
  checkers = [
    'org.checkerframework.common.util.count.report.ReportChecker',
  ]
  extraJavacArgs = [
    '-AsuppressWarnings=type.anno.before.modifier,type.anno.before.decl.anno',
    '-AassumePure',
    '-AwarnUnneededSuppressions',
    '-AassumeAssertionsAreEnabled',
    '-AReportChecker_warns',
    "-Xmaxwarns", "99999",
    "-Astubs=${project.projectDir}/reportoptional.astub",
  ]
  excludeTests = true
  ext.checkerFrameworkVersion = '3.42.0'
  dependencies {
    compileOnly "org.checkerframework:checker-qual:${checkerFrameworkVersion}"
    testCompileOnly "org.checkerframework:checker-qual:${checkerFrameworkVersion}"
    checkerFramework "org.checkerframework:checker:${checkerFrameworkVersion}"
  }
  configurations.all {
    resolutionStrategy.cacheChangingModulesFor 0, 'seconds'
  }
}
